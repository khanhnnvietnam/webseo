#!/bin/bash

# ==============================================================================
# T·∫¨P L·ªÜNH TRI·ªÇN KHAI T·ª∞ ƒê·ªòNG ·ª®NG D·ª§NG NEXT.JS TR√äN UBUNTU 24.04
# ==============================================================================
#
# H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng:
# 1. Sao ch√©p t·∫≠p l·ªánh n√†y v√†o m√°y ch·ªß Ubuntu c·ªßa b·∫°n:
#    scp deploy.sh user@your_server_ip:~/
#
# 2. C·∫•p quy·ªÅn th·ª±c thi cho t·∫≠p l·ªánh:
#    chmod +x deploy.sh
#
# 3. Ch·ªânh s·ª≠a c√°c bi·∫øn c·∫•u h√¨nh b√™n d∆∞·ªõi cho ph√π h·ª£p v·ªõi d·ª± √°n c·ªßa b·∫°n.
#
# 4. Ch·∫°y t·∫≠p l·ªánh:
#    ./deploy.sh
#
# ==============================================================================

# D·ª´ng l·∫°i ngay khi c√≥ l·ªói
set -e

# --- C·∫§U H√åNH ---
GIT_REPO_URL="https://github.com/your-username/your-repo.git" # <<< THAY TH·∫æ b·∫±ng URL kho Git c·ªßa b·∫°n
PROJECT_DIR_NAME="my-seo-app"                                 # <<< THAY TH·∫æ b·∫±ng t√™n th∆∞ m·ª•c d·ª± √°n c·ªßa b·∫°n
DOMAIN_NAME="your_domain.com"                                 # <<< THAY TH·∫æ b·∫±ng t√™n mi·ªÅn c·ªßa b·∫°n (ho·∫∑c IP m√°y ch·ªß)
NODE_VERSION="20"

# --- BI·∫æN TO√ÄN C·ª§C ---
PROJECT_PATH="/var/www/${PROJECT_DIR_NAME}"
NGINX_CONFIG_PATH="/etc/nginx/sites-available/${PROJECT_DIR_NAME}"

# --- B·∫ÆT ƒê·∫¶U T·∫¨P L·ªÜNH ---
echo "üöÄ B·∫Øt ƒë·∫ßu qu√° tr√¨nh tri·ªÉn khai t·ª± ƒë·ªông..."

# 1. C·∫¨P NH·∫¨T H·ªÜ TH·ªêNG
echo "-> (1/5) ƒêang c·∫≠p nh·∫≠t c√°c g√≥i h·ªá th·ªëng..."
sudo apt-get update
sudo apt-get upgrade -y
echo "‚úÖ C·∫≠p nh·∫≠t h·ªá th·ªëng ho√†n t·∫•t."

# 2. C√ÄI ƒê·∫∂T NGINX, NODE.JS V√Ä PM2
echo "-> (2/5) ƒêang c√†i ƒë·∫∑t c√°c ph·ª• thu·ªôc (Nginx, Node.js, PM2)..."
# C√†i ƒë·∫∑t Nginx
if ! command -v nginx &> /dev/null; then
    sudo apt-get install -y nginx
    sudo systemctl start nginx
    sudo systemctl enable nginx
    echo "‚úÖ Nginx ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† k√≠ch ho·∫°t."
else
    echo "üëç Nginx ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t."
fi

# C√†i ƒë·∫∑t Node.js b·∫±ng NodeSource
if ! command -v node &> /dev/null; then
    sudo apt-get install -y ca-certificates curl gnupg
    sudo mkdir -p /etc/apt/keyrings
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_VERSION.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list
    sudo apt-get update
    sudo apt-get install nodejs -y
    echo "‚úÖ Node.js phi√™n b·∫£n $NODE_VERSION ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t."
else
    echo "üëç Node.js ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t."
fi

# C√†i ƒë·∫∑t PM2
if ! command -v pm2 &> /dev/null; then
    sudo npm install pm2@latest -g
    echo "‚úÖ PM2 ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t."
else
    echo "üëç PM2 ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t."
fi

# 3. SAO CH√âP V√Ä C√ÄI ƒê·∫∂T D·ª∞ √ÅN
echo "-> (3/5) ƒêang thi·∫øt l·∫≠p d·ª± √°n..."
if [ -d "$PROJECT_PATH" ]; then
    echo "üîÑ Th∆∞ m·ª•c d·ª± √°n ƒë√£ t·ªìn t·∫°i. ƒêang k√©o c√°c thay ƒë·ªïi m·ªõi nh·∫•t..."
    cd "$PROJECT_PATH"
    sudo git pull
else
    echo "üìÇ ƒêang sao ch√©p kho l∆∞u tr·ªØ t·ª´ Git..."
    sudo git clone "$GIT_REPO_URL" "$PROJECT_PATH"
    cd "$PROJECT_PATH"
fi

echo "üì¶ ƒêang c√†i ƒë·∫∑t c√°c g√≥i ph·ª• thu·ªôc NPM..."
sudo npm install

echo "üèóÔ∏è ƒêang x√¢y d·ª±ng ·ª©ng d·ª•ng Next.js cho m√¥i tr∆∞·ªùng s·∫£n xu·∫•t..."
sudo npm run build
echo "‚úÖ D·ª± √°n ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p v√† x√¢y d·ª±ng th√†nh c√¥ng."

# 4. C·∫§U H√åNH NGINX L√ÄM PROXY NG∆Ø·ª¢C
echo "-> (4/5) ƒêang c·∫•u h√¨nh Nginx..."
sudo tee "$NGINX_CONFIG_PATH" > /dev/null <<EOF
server {
    listen 80;
    listen [::]:80;

    server_name $DOMAIN_NAME www.$DOMAIN_NAME;

    # Chuy·ªÉn h∆∞·ªõng HTTP sang HTTPS (n·∫øu b·∫°n d√πng SSL)
    # Ghi ch√∫: B·ªè ghi ch√∫ c√°c d√≤ng b√™n d∆∞·ªõi sau khi c√†i ƒë·∫∑t SSL
    # location / {
    #     return 301 https://\$host\$request_uri;
    # }

    # C·∫•u h√¨nh cho x√°c th·ª±c Let's Encrypt
    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name $DOMAIN_NAME www.$DOMAIN_NAME;

    # ƒê∆∞·ªùng d·∫´n ch·ª©ng ch·ªâ SSL (thay th·∫ø sau khi c√≥)
    # ssl_certificate /etc/letsencrypt/live/$DOMAIN_NAME/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/$DOMAIN_NAME/privkey.pem;

    # C·∫£i thi·ªán b·∫£o m·∫≠t SSL
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_prefer_server_ciphers off;

    location / {
        proxy_pass http://localhost:3000; # ·ª®ng d·ª•ng Next.js ch·∫°y tr√™n c·ªïng 3000
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_cache_bypass \$http_upgrade;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

# K√≠ch ho·∫°t c·∫•u h√¨nh Nginx
if [ ! -L "/etc/nginx/sites-enabled/${PROJECT_DIR_NAME}" ]; then
    sudo ln -s "$NGINX_CONFIG_PATH" /etc/nginx/sites-enabled/
fi

# X√≥a c·∫•u h√¨nh m·∫∑c ƒë·ªãnh n·∫øu n√≥ v·∫´n t·ªìn t·∫°i
if [ -L "/etc/nginx/sites-enabled/default" ]; then
    sudo rm /etc/nginx/sites-enabled/default
fi

# Ki·ªÉm tra c√∫ ph√°p Nginx v√† kh·ªüi ƒë·ªông l·∫°i
sudo nginx -t
sudo systemctl restart nginx
echo "‚úÖ Nginx ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh l√†m proxy ng∆∞·ª£c."
echo "üëâ L∆∞u √Ω: C·∫•u h√¨nh SSL ƒëang ƒë∆∞·ª£c ghi ch√∫. H√£y c√†i ƒë·∫∑t Certbot ƒë·ªÉ k√≠ch ho·∫°t HTTPS."

# 5. KH·ªûI ƒê·ªòNG ·ª®NG D·ª§NG V·ªöI PM2
echo "-> (5/5) ƒêang kh·ªüi ƒë·ªông ·ª©ng d·ª•ng v·ªõi PM2..."
cd "$PROJECT_PATH"

# D·ª´ng quy tr√¨nh c≈© n·∫øu c√≥ v√† b·∫Øt ƒë·∫ßu quy tr√¨nh m·ªõi
sudo pm2 stop "$PROJECT_DIR_NAME" || true
sudo pm2 delete "$PROJECT_DIR_NAME" || true
sudo pm2 start npm --name "$PROJECT_DIR_NAME" -- start

# Thi·∫øt l·∫≠p PM2 ƒë·ªÉ t·ª± kh·ªüi ƒë·ªông c√πng h·ªá th·ªëng
sudo pm2 startup systemd -u $USER --hp /home/$USER
sudo pm2 save

echo "üéâ Ho√†n t·∫•t! ·ª®ng d·ª•ng c·ªßa b·∫°n ƒëang ch·∫°y v√† ƒë∆∞·ª£c qu·∫£n l√Ω b·ªüi PM2."
echo "----------------------------------------------------------------"
echo "üåê B·∫°n c√≥ th·ªÉ truy c·∫≠p ·ª©ng d·ª•ng t·∫°i: http://$DOMAIN_NAME"
echo "üìà ƒê·ªÉ xem tr·∫°ng th√°i ·ª©ng d·ª•ng, ch·∫°y: pm2 status"
echo "üìú ƒê·ªÉ xem nh·∫≠t k√Ω, ch·∫°y: pm2 logs $PROJECT_DIR_NAME"
echo "----------------------------------------------------------------"

